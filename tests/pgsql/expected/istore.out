CREATE EXTENSION clickhouse_fdw;
CREATE EXTENSION istore;
CREATE SERVER ch_default FOREIGN DATA WRAPPER clickhouse_fdw OPTIONS(dbname 'regression');
CREATE USER MAPPING FOR CURRENT_USER SERVER ch_default;
-- create remote table
SELECT clickhousedb_raw_query('DROP DATABASE IF EXISTS regression');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('CREATE DATABASE regression');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('CREATE TABLE regression.t2 (`dt` Date, `a_ids` Array(Int32), `a_values` Array(Int32)) ENGINE = MergeTree() PARTITION BY dt ORDER BY dt SETTINGS index_granularity = 8192');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t2 VALUES (''2019-10-10'', [1,2,3], [11, 22, 33])');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t2 VALUES (''2019-10-10'', [1,2,3,4], [11,22, 33,44])');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t2 VALUES (''2019-10-11'', [3,4,5], [33, 44, 55])');
 clickhousedb_raw_query 
------------------------
 
(1 row)

-- without sign
CREATE FOREIGN TABLE t2 (dt date NOT NULL, a istore) SERVER ch_default;
-- default sign
SELECT clickhousedb_raw_query('CREATE TABLE regression.t3
		(`dt` Date, `a_ids` Array(Int32), `a_values` Array(Int32), `sign` Int8)
		ENGINE = CollapsingMergeTree(sign)
		PARTITION BY dt
		ORDER BY dt SETTINGS index_granularity = 8192');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t3 VALUES (''2019-10-10'', [1,2,3], [11, 22, 33], 1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t3 VALUES (''2019-10-11'', [3,4,5], [33, 44, 55], 1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t3 VALUES (''2019-10-11'', [3,4,5], [33, 44, 55], -1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t3 VALUES (''2019-10-11'', [3,4,5], [33, 44, 66], 1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

CREATE FOREIGN TABLE t3 (dt date NOT NULL, a istore) SERVER ch_default
	OPTIONS (table_name 't3', engine 'CollapsingMergeTree');
-- custom sign
SELECT clickhousedb_raw_query('CREATE TABLE regression.t4
		(`dt` Date, `a_ids` Array(Int32), `a_values` Array(Int32), `Sign` Int8)
		ENGINE = CollapsingMergeTree(Sign)
		PARTITION BY dt
		ORDER BY dt SETTINGS index_granularity = 8192');
 clickhousedb_raw_query 
------------------------
 
(1 row)

CREATE FOREIGN TABLE t4 (dt date NOT NULL, a istore) SERVER ch_default
	OPTIONS (engine 'CollapsingMergeTree(Sign)');
SELECT clickhousedb_raw_query('INSERT INTO regression.t4 VALUES (''2019-10-10'', [1,2,3], [11, 22, 33], 1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t4 VALUES (''2019-10-10'', [1,2,3], [11, 22, 33], -1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t4 VALUES (''2019-10-10'', [1,2,3,4], [11,22, 33,44], 1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

SELECT clickhousedb_raw_query('INSERT INTO regression.t4 VALUES (''2019-10-11'', [3,4,5], [33, 44, 55], 1)');
 clickhousedb_raw_query 
------------------------
 
(1 row)

-- check all good
EXPLAIN (VERBOSE) SELECT * FROM t2 ORDER BY dt;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Foreign Scan on public.t2  (cost=1.00..-1.00 rows=2 width=36)
   Output: dt, a
   Remote SQL: SELECT dt, (a_ids,a_values) FROM regression.t2 ORDER BY dt ASC
(3 rows)

SELECT * FROM t2 ORDER BY dt;
     dt     |                     a                      
------------+--------------------------------------------
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33"
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33", "4"=>"44"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"55"
(3 rows)

EXPLAIN (VERBOSE) SELECT dt, sum(a) FROM t2 GROUP BY dt ORDER BY dt;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Sort  (cost=-0.99..-0.98 rows=2 width=36)
   Output: dt, (sum(a))
   Sort Key: t2.dt
   ->  Foreign Scan  (cost=1.00..-1.00 rows=2 width=36)
         Output: dt, (sum(a))
         Relations: Aggregate on (t2)
         Remote SQL: SELECT dt, "sumMap"(a_ids,a_values) FROM regression.t2 GROUP BY dt
(7 rows)

SELECT dt, sum(a) FROM t2 GROUP BY dt ORDER BY dt;
     dt     |                    sum                     
------------+--------------------------------------------
 10-10-2019 | "1"=>"22", "2"=>"44", "3"=>"66", "4"=>"44"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"55"
(2 rows)

EXPLAIN (VERBOSE) SELECT dt, sum(a) FROM t3 GROUP BY dt ORDER BY dt;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Sort  (cost=-0.99..-0.98 rows=2 width=36)
   Output: dt, (sum(a))
   Sort Key: t3.dt
   ->  Foreign Scan  (cost=1.00..-1.00 rows=2 width=36)
         Output: dt, (sum(a))
         Relations: Aggregate on (t3)
         Remote SQL: SELECT dt, "sumMap"(a_ids,arrayMap(x -> x * sign,a_values)) FROM regression.t3 GROUP BY dt
(7 rows)

SELECT * FROM t3 ORDER BY dt;
     dt     |                a                
------------+---------------------------------
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"55"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"66"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"55"
(4 rows)

SELECT dt, sum(a) FROM t3 GROUP BY dt ORDER BY dt;
     dt     |               sum               
------------+---------------------------------
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"66"
(2 rows)

EXPLAIN (VERBOSE) SELECT dt, sum(a) FROM t4 GROUP BY dt ORDER BY dt;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Sort  (cost=-0.99..-0.98 rows=2 width=36)
   Output: dt, (sum(a))
   Sort Key: t4.dt
   ->  Foreign Scan  (cost=1.00..-1.00 rows=2 width=36)
         Output: dt, (sum(a))
         Relations: Aggregate on (t4)
         Remote SQL: SELECT dt, "sumMap"(a_ids,arrayMap(x -> x * Sign,a_values)) FROM regression.t4 GROUP BY dt
(7 rows)

SELECT * FROM t4 ORDER BY dt;
     dt     |                     a                      
------------+--------------------------------------------
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33", "4"=>"44"
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33"
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"55"
(4 rows)

SELECT dt, sum(a) FROM t4 GROUP BY dt ORDER BY dt;
     dt     |                    sum                     
------------+--------------------------------------------
 10-10-2019 | "1"=>"11", "2"=>"22", "3"=>"33", "4"=>"44"
 10-11-2019 | "3"=>"33", "4"=>"44", "5"=>"55"
(2 rows)

SELECT clickhousedb_raw_query('DROP DATABASE regression');
 clickhousedb_raw_query 
------------------------
 
(1 row)

DROP EXTENSION clickhouse_fdw CASCADE;
NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to server ch_default
drop cascades to user mapping for ildus on server ch_default
drop cascades to foreign table t2
drop cascades to foreign table t3
drop cascades to foreign table t4
DROP EXTENSION istore CASCADE;
